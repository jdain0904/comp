/*
vector로 저장한 dfs : 입력 순서 고려
*/
#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

vector <vector<ll>> v;
vector <ll> visited;
ll n, m;

void dfs(ll num)
{
    cout<<num<<' ';


    for(ll i=0; i<v[num].size(); i++){
        if(visited[v[num][i]]==0){
            visited[v[num][i]]=1;
            dfs(v[num][i]);
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin>>n>>m;
    v.resize(n+1);
    visited.resize(n+1);
    while(m--){
        ll a, b;
        cin>>a>>b;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    visited[1]=1;
    dfs(1);

    return 0;
}
