/*
격자 위 모든 점에 대해
8방향으로 직선 위 글자들 합쳐보고
gshs인지 판단(글자 갱신될 때마다 맞는지 판단하면 시간단축 가능)
*/
#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

ll n, cnt;
ll dy[]={1, 1, 0, -1, -1, -1, 0, 1};
ll dx[]={0, 1, 1, 1, 0, -1, -1, -1};
string target="gshs";
vector <vector<char>> board;

void f(ll y, ll x, string s, ll idx)
{
    if(s.size()!=0)
       {
           if(s[s.size()-1]!=target[s.size()-1]) return;
       }
    if(s.size()==4)
    {
        if(s==target) cnt++;
        return;
    }

    if(board[y][x]==' ') return;

    f(y+dy[idx], x+dx[idx], s+board[y][x], idx);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin>>n;
    board.resize(n+2, vector<char>(n+2, ' '));
    for(ll i=1;i<=n; i++){
        for(ll j=1; j<=n; j++){
            cin>>board[i][j];
        }
    }

    for(ll i=1;i<=n; i++){
        for(ll j=1; j<=n; j++){
            for(ll k=0; k<8; k++)f(i, j, "", k);
        }
    }
    cout<<cnt;

    return 0;
}
