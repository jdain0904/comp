/*
변형냅색
dp[인덱스+1][비용]=min(dp[인덱스][비용], dp[인덱스][비용-상품비용]+상품가치치)
*/
#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

ll n, m, ans=INT_MAX;
vector <vector<ll>> dp;
vector <pair<ll, ll>> obj;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


    cin>>n>>m;
    dp.resize(n+1, vector<ll>(10001));
    for(ll i=0; i<n; i++){
        ll temp;
        cin>>temp;
        obj.push_back({temp, 0});
    }    
for(ll i=0; i<n; i++){
        ll temp;
        cin>>temp;
        obj[i].second=temp;
    }

    for(ll i=1; i<=n; i++){
        for(ll j=0; j<10001; j++){
            if(j-obj[i-1].second>=0) dp[i][j]=max(dp[i-1][j], dp[i-1][j-obj[i-1].second]+obj[i-1].first);
            else dp[i][j]=dp[i-1][j];

            if(dp[i][j]>=m) ans=min(ans, j);
        }

        
    }

    cout<<ans;

    return 0;
}
