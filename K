#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

ll n;
vector<vector<ll>>board;
vector<vector<ll>>visited;
vector <ll> v;
ll dx[]={0, 1, 0, -1};
ll dy[]={1, 0, -1, 0};

ll bfs(ll y, ll x)
{
    queue <pair<ll, ll>> q;
    q.push({y, x});
    ll cnt=1;

    while(!q.empty())
    {
        pair<ll, ll> cur=q.front();
        q.pop();
        for(ll i=0; i<4; i++)
        {
            ll nx=dx[i]+cur.second;
            ll ny=dy[i]+cur.first;

            if(nx<0||ny<0||nx>=n||ny>=n)continue;

            if(board[ny][nx]==1&&visited[ny][nx]==0)
            {
                visited[ny][nx]=1;
                cnt++;
                q.push({ny, nx});
            }
        }
    }
    return cnt;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin>>n;
    board.resize(n, vector<ll>(n));
    visited.resize(n, vector<ll>(n, 0));

    for(ll i=0; i<n; i++)
    {
        for(ll j=0; j<n; j++)
        {
            char c;
            cin>>c;
            board[i][j]=c-'0';
        }
    }

    ll cnt=0;

    for(ll i=0; i<n; i++)
    {
        for(ll j=0; j<n; j++)
        {
            if(visited[i][j]==0&&board[i][j]==1)
            {
                visited[i][j]=1;
                v.push_back(bfs(i, j));
                cnt++;
            }
        }
    }
    cout<<cnt<<endl;
    sort(v.begin(), v.end());
    for(ll i:v)cout<<i<<endl;

    return 0;
}
