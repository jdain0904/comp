#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

vector <vector<vector <ll>>> board;
pair<ll, ll> cur;
ll n, m, lim;
ll cnt;
ll dx[]={2, 2, 1, -1, -2, -2, 1, -1};
ll dy[]={1, -1, 2, 2, 1, -1, -2, -2};

void bfs(pair<ll, ll> tmp)
{
    queue <pair<ll, pair<ll, ll>>> q;
    q.push({tmp.first-1, {tmp.second-1, 0}});

    while(!q.empty())
    {
        pair <ll, pair<ll, ll>> k=q.front();
        q.pop();

        if(k.second.second==lim) return;
        ll asdf=k.second.second+1;

        for(ll i=0;i <8; i++)
        {
            pair <ll, ll>next={k.first+dy[i], k.second.first+dx[i]};

            if((next.first-202)+cur.first>=n||(next.first-202)+cur.first<0||(next.second-202)+cur.second>=m||(next.second-202)+cur.second<0) continue;

            if(board[next.first][next.second][asdf%2]==0)
            {
                if(asdf%2==lim%2) cnt++;
                board[next.first][next.second][asdf%2]=1;
                q.push({next.first, {next.second, k.second.second+1}});
            }


        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


    cin>>n>>m;
    cin>>cur.first>>cur.second>>lim;

    board.resize(405, vector<vector<ll>>(405, vector <ll>(2, 0)));

    bfs({202, 202});

    cout<<n*m-cnt;

    return 0;
}
