#include <bits/stdc++.h>
#define ll long long
#define endl "\n"

using namespace std;

ll w, h;
vector <vector <ll>> board;
vector<vector<ll>> visited;
ll dx[]={0, 1, 0, -1}, dy[]={1, 0, -1, 0};

ll bfs(pair<ll, ll> start){
    queue <pair<ll, ll>> q;
    visited[start.first][start.second]=1;
    ll cnt=1;

    q.push(start);

    while(!q.empty()){
        ll x=q.front().second;
        ll y=q.front().first;
        q.pop();

        for(ll i=0; i<4; i++){
            ll nx=x+dx[i];
            ll ny=y+dy[i];

            if(visited[ny][nx]==0&&board[ny][nx]==1)
            {
                visited[ny][nx]=1;
                cnt++;
                q.push({ny, nx});
            }
        }
    }
    return cnt;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin>>h>>w;
    board.resize(w+2, vector<ll>(h+2, 0));
    visited.resize(w+2, vector<ll>(h+2, 0));

    for(ll i=1; i<=w; i++){
        for(ll j=1; j<=h; j++){
            char c;
            cin>>c;
            if(c=='*') board[i][j]=1;
            else board[i][j]=0;
        }
        char c;
       // cin>>c;
    }

    ll mx=0;
    for(ll i=1; i<=w; i++){
        for(ll j=1; j<=h; j++)
        {
            if(visited[i][j]==0&&board[i][j]==1) mx=max(mx,bfs({i, j}));
        }
    }
    cout<<mx;

    return 0;
}
